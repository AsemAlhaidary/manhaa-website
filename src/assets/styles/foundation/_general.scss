@use "../foundation/variables" as *;
@use "../foundation/mixins" as *;

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  --container-max-width: $sm-size;
  background-color: var(--primary);
  width: 100%;
  max-width: 100vw;

  @media screen and (min-width: #{$md-size}) {
    --container-max-width: #{$md-size};
  }

  @media screen and (min-width: #{$lg-size}) {
    --container-max-width: #{$lg-size};
  }

  @media screen and (min-width: #{$xl-size}) {
    --container-max-width: #{$xl-size};
  }

  & {
    --content-width: min(100%, var(--container-max-width, #{$xl-size}));
  }
}

::selection {
  background-color: var(--accent);
  color: #FFFFFF;
}

.controller {
  display: none;
}

.container {
  position: relative;
  padding: $container-paddingY $container-paddingX;
  overflow: hidden;
  background-color: transparent;
}

.decorator {
  &-top {
    &-right {
      &::before {
        content: '';
        top: 0;
        right: 0;
        transform: translate(50%, -50%);
        @include decorator;
      }
    }

    &-left {
      &::before {
        content: '';
        top: 0;
        left: 0;
        transform: translate(-50%, -50%);
        @include decorator;
      }
    }
  }

  &-bottom {
    &-right {
      &::after {
        content: '';
        bottom: 0;
        right: 0;
        transform: translate(50%, 50%);
        @include decorator;
      }
    }

    &-left {
      &::after {
        content: '';
        bottom: 0;
        left: 0;
        transform: translate(-50%, 50%);
        @include decorator;
      }
    }
  }
}

.row {
  padding: 2rem 0;
  width: 100%;
}

.wrapper {
  width: 100%;
  max-width: var(--content-width);
  margin: 0 auto;
}

.screen-height {
  min-height: 100vh;
}

.section-heading {
  text-align: center;
}

.flex {
  display: flex;
  gap: 0.5rem;

  &.mb {
    @media screen and (min-width: #{$md-size}) {
      display: none;
    }
  }
}

.order-0 {
  order: 0;

  &.mb {
    @media screen and (min-width: #{$md-size}) {
      order: unset;
    }
  }
}

.order-1 {
  order: 1;

  &.mb {
    @media screen and (min-width: #{$md-size}) {
      order: unset;
    }
  }
}

.order-2 {
  order: 2;

  &.mb {
    @media screen and (min-width: #{$md-size}) {
      order: unset;
    }
  }
}

.btn,
.btn-primary {
  @include buttonPrimary;
}

.btn-secondary {
  @include buttonSecondary;
}

.text-right {
  text-align: right;
}

.card {
  padding: 1rem;
  @include card;
  @include glassmorphism;
}

.categories {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 0.5rem;

  .category {
    list-style-type: none;

    a {
      @include category;
    }
  }
}

.fatha {
  &-right {
    @include fatha(right);
  }

  &-left {
    @include fatha(left);
  }
}

.field {
  @include field;
}

.logo-link {
  display: flex;

  img {
    height: 80px;
    object-fit: contain;
    object-position: center;
    filter: grayscale(100%) brightness(1000%) contrast(100%);
  }
}

html[data-theme="light"] {
  .logo-link img {
    filter: unset;
  }
}