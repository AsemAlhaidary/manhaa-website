@use "../foundation/variables" as *;

@mixin navbar-open {
  .navbar-toggle {
    span {
      &:first-of-type {
        transform: translate(22%, 5px) rotate(45deg) scaleX(0.7);
      }

      &:last-of-type {
        transform: translate(22%, -5px) rotate(-45deg) scaleX(0.7);
      }
    }
  }

  .header-navbar-container {
    transform: translateX(0);
  }
}

@mixin container-shadow {
  box-shadow: 0 2px 10px var(--transparentAccent);
}

@mixin button {
  padding: 4px 20px;
  height: fit-content;
  display: inline-block;
  border-radius: 30px;
  border: 1px solid var(--accent);
  font-weight: normal;
  text-decoration: none;
  text-align: center;
  transition: $site-transition;
  cursor: pointer;
}

@mixin buttonPrimary {
  @include button;
  background-color: var(--accent);
  color: #FFFFFF;

  &:hover,
  &:focus {
    background-color: var(--hoverPrimaryColor);
    border-color: var(--hoverPrimaryColor);
  }
}

@mixin buttonSecondary {
  @include button;
  background-color: transparent;
  color: var(--accent);

  &:hover,
  &:focus {
    background-color: var(--hoverSecondaryColor);
    border-color: var(--hoverPrimaryColor);
    color: var(--hoverPrimaryColor);
  }
}

@mixin activeEffect($rise-value: 30px) {
  position: relative;

  > * {
    position: relative;
    transition: $site-transition;
    transform: translateY(0);
  }

  &::after {
    content: '';
    position: absolute;
    right: 0;
    bottom: 0;
    display: inline-block;
    width: 100%;
    aspect-ratio: $fatha-ratio;
    background-image: $active-icon;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    transition: $site-transition;
    transform: translateY(30px);
    opacity: 0;
  }

  &.active,
  &:active,
  &:hover,
  &:focus {
    > * {
      transform: translateY(calc($rise-value * -1));
    }

    &::after {
      transform: translateY(10px);
      opacity: 1;
    }
  }
}

@mixin glassmorphism($value: blur(20px), $action: 'add') {
  @if $action == 'remove' {
    $value: unset;
  }

  -webkit-backdrop-filter: $value;
  -moz-backdrop-filter: $value;
  -ms-backdrop-filter: $value;
  -o-backdrop-filter: $value;
  backdrop-filter: $value;
}

@mixin card {
  transition: $site-transition;
  border-radius: $card-border-radius;
  box-shadow:
    inset 0 -10px 15px rgba(255, 255, 255, 0),
    0 10px 15px rgba(0, 0, 0, 0);

  &:hover,
  &:active,
  &:focus,
  &:focus-within,
  &.card-active {
    box-shadow:
    inset 0 -10px 15px rgba(255, 255, 255, 0.1),
    0 10px 15px rgba(0, 0, 0, 0.2);
  }
}

@mixin fatha($pos: right) {
  position: relative;

  &::after {
    $translateX: 75%;
    $translateY: ($translateX * -1);
    content: '';
    position: absolute;
    top: 0;
    #{$pos}: 0;
    @if $pos == left {
      $translateX: ($translateX * -1);
    }
    transform: translate($translateX, $translateY);
    width: 200vw;
    aspect-ratio: $fatha-ratio;
    background-image: $fatha-image;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    z-index: -1;
  }
}

@mixin field {
  padding: 0.5rem 1rem;
  width: fit-content;
  line-height: 1;
  font-size: 1rem;
  color: var(--secondaryText);
  background-color: var(--secondary);
  border: unset;
  border-radius: 3rem;

  &:focus,
  &:focus-within {
    outline: 2px solid var(--accent);
  }

  > * {
    border: unset;
    outline: unset;
  }

  &.icon-field {
    display: flex;
    align-items: center;

    .icon {
      margin-inline-end: 0.5rem;
      padding-inline-end: 0.5rem;
      display: inline-block;
      color: var(--accent);
      border-left: 1px solid var(--accent);
    }
  }
}

@mixin category {
  padding: 0.5rem;
  display: inline-block;
  font-size: 0.8em;
  line-height: 1;
  color: var(--primaryText);
  text-decoration: none;
  background-color: var(--primary);
  border-radius: 2rem;
  border: 1px solid var(--secondaryText);
}

@mixin decorator {
  position: absolute;
  height: 400px;
  width: 400px;
  border-radius: 50%;
  background-color: var(--accent);
  filter: blur(150px);
  z-index: -1;
}